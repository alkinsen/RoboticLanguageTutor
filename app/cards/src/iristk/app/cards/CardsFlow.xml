<?xml version="1.0" encoding="utf-8"?>
<flow name="CardsFlow" package="iristk.app.cards" 
	initial="Start" xmlns:this="iristk.app.cards.CardsFlow" xmlns="iristk.flow" 
	xmlns:p="iristk.flow.param" xmlns:agent="iristk.situated.SystemAgentFlow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="iristk.flow flow.xsd iristk.situated.SystemAgentFlow SystemAgentFlow.xsd">
	
	<import class="iristk.situated.Location"/>
	<import class="application.TextToSpeech"/>
	
	
	<param name="agent" type="iristk.situated.SystemAgentFlow"/>
	
	<var name="system" type="iristk.situated.SystemAgent" value="agent.getSystemAgent()"/> 
	<var name="tts" type="application.TextToSpeech" value="new TextToSpeech()"/>
	<var name="audioplayer" type="AudioPlayer" value="new AudioPlayer()"/>

	<state id="Start" extends="Dialog">
		<onentry>
			<call state="lookCaretaker"/>
			<exec>tts.setVoice("dfki-ot-hsmm");</exec>
			<exec>audioplayer.playSound("audio/StartLevel.wav");</exec>
			<call state="lookChild"/>
			<wait msec="3000"/>
			<agent:say>Hello there I am Furhat, which level do you want to play?</agent:say>
			<goto state="Play"/>
			
			<!--  call state="lookCaretaker"/>
			< gent:listen/-->
		</onentry>
		
		<onevent name="sense.user.speak" cond="event?:sem:one">
			<goto state="EasyLearn"/>
		</onevent>
		<onevent name="sense.user.speak" cond="event?:sem:two">
			<goto state="Learn"/>
		</onevent>
		<onevent name="sense.user.speak" cond="event?:sem:three">
			<goto state="Play"/>
		</onevent>
	</state>
	
	<!-- EASY EASY EASY -->
	<state id="EasyLearn" extends="Dialog">
		<onentry>
			<call state="lookChild"/>
			<agent:say>Which subject would you like to learn about?</agent:say>
			<agent:listen/>
		</onentry>
		
		<onevent name="sense.user.speak" cond="event?:sem:animal">
			<goto state="EasyLearnAnimals"/>
		</onevent>
		<onevent name="sense.user.speak" cond="event?:sem:color">
			<goto state="EasyLearnColors"/>
		</onevent>
		<onevent name="sense.user.speak" cond="event?:sem:body">
			<goto state="EasyLearnBody"/>
		</onevent>
	</state>
	
	
	<state id="EasyLearnAnimals">
		<onentry>
			<agent:say>Let's read a book. The book is Brown Bear, Brown Bear.</agent:say>
			<wait msec="3000"/>
			
			<exec>tts.speak("Ayıyı gösterin.", 1.0f, false, false);</exec>
			<agent:say>Brown bear, brown bear, what do you see?</agent:say>
			<wait msec="1000"/>
			<exec>tts.speak("Kuşu gösterin.", 1.0f, false, false);</exec>
			<agent:say>I see a red bird looking at me.</agent:say>
			<wait msec="1000"/>
			<agent:say>Red bird, red bird, what do you see?</agent:say>
			<wait msec="1000"/>
			<exec>tts.speak("Ördeği gösterin.", 1.0f, false, false);</exec>
			<agent:say>I see a yellow duck looking at me.</agent:say>
			<wait msec="1000"/>
			<agent:say>Yellow duck, yellow duck, what do you see?</agent:say>
			<wait msec="1000"/>
			<exec>tts.speak("Atı gösterin.", 1.0f, false, false);</exec>
			<agent:say>I see a blue horse looking at me.</agent:say>
			<wait msec="1000"/>
			<agent:say>Blue horse, blue horse, what do you see?</agent:say>
			<wait msec="1000"/>
			<exec>tts.speak("Kurbağayı gösterin.", 1.0f, false, false);</exec>
			<agent:say>I see a green frog looking at me.</agent:say>
			<wait msec="1000"/>
			<agent:say>Green frog, green frog, what do you see?</agent:say>
			<wait msec="1000"/>
			<exec>tts.speak("Kediyi gösterin.", 1.0f, false, false);</exec>
			<agent:say>I see a purple cat looking at me.</agent:say>
			<wait msec="1000"/>
			<agent:say>Purple cat, purple cat, what do you see?</agent:say>
			<wait msec="1000"/>
			<exec>tts.speak("Köpeği gösterin.", 1.0f, false, false);</exec>
			<agent:say>I see a white dog looking at me.</agent:say>
			<wait msec="1000"/>
			<agent:say>White dog, white dog, what do you see?</agent:say>
			<wait msec="1000"/>
			<exec>tts.speak("Kuzuyu gösterin.", 1.0f, false, false);</exec>
			<agent:say>I see a black sheep looking at me.</agent:say>
			<wait msec="1000"/>
			<agent:say>Black sheep, black sheep what do you see?</agent:say>
			<wait msec="1000"/>
			<exec>tts.speak("Balığı gösterin.", 1.0f, false, false);</exec>
			<agent:say>I see a gold fish looking at me.</agent:say>
			<wait msec="1000"/>
			<agent:say>Gold fish, gold fish, what do you see?</agent:say>
			<wait msec="1000"/>
			<exec>tts.speak("Kendinizi gösterin.", 1.0f, false, false);</exec>
			<agent:say>I see a nanny looking at me.</agent:say>
			<wait msec="1000"/>
			<agent:say>Nanny, nanny, what do you see?</agent:say>
			<wait msec="1000"/>
			<exec>tts.speak("Bebeği gösterin.", 1.0f, false, false);</exec>
			<agent:say>I see a baby looking at me.</agent:say>
			<wait msec="1000"/>
			
			<agent:say>Well done! I love this book!</agent:say>
		</onentry>
	</state>
	<state id="EasyLearnColors">
		<onentry>
			<call state="lookCaretaker"/>
			<exec>tts.speak("Kırmızı kartı gösterin ve sallayın.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>This is red.</agent:say>
			
			<call state="lookChild"/>
			<exec>tts.speak("Kırmızı kartı çevirip elmaya işaret edin.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>What is red? Apple is red. Apple is red.</agent:say>
			
			<call state="lookChild"/>
			<exec>tts.speak("Mavi kartı gösterin ve sallayın.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>This is blue. </agent:say>
			
			<call state="lookCaretaker"/>
			<exec>tts.speak("Mavi kartı çevirip gök yüzüne işaret edin.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>What is blue? The sky is blue. The sky is blue.</agent:say>
			
			<call state="lookChild"/>
			<exec>tts.speak("Yeşil kartı gösterin ve sallayın.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>This is green.</agent:say>
			
			<call state="lookCaretaker"/>
			<exec>tts.speak("Yeşil kartı çevirip çimene işaret edin.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>What is green? The grass is green. The grass is green.</agent:say>
			
			<call state="lookChild"/>
			<exec>tts.speak("Sarı kartı gösterin ve sallayın.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>This is yellow.</agent:say>
			
			<call state="lookCaretaker"/>
			<exec>tts.speak("Sarı kartı çevirip limona işaret edin.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>What is yellow? Lemon is yellow. Lemon is yellow.</agent:say>
			
			<call state="lookChild"/>
			<exec>tts.speak("Turuncu kartı gösterin ve sallayın.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>This is orange.</agent:say>
			
			<call state="lookCaretaker"/>
			<exec>tts.speak("Turunucu kartı çevirip havuca işaret edin.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>What is orange? Carrot is orange. Carrot is orange.</agent:say>
			
			<call state="lookChild"/>
			<exec>tts.speak("Kahverengi kartı gösterin ve sallayın.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>This is brown.</agent:say>
			
			<call state="lookCaretaker"/>
			<exec>tts.speak("Kahverengi kartı çevirip ayıya işaret edin.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>What is brown? Bear is brown. Bear is brown.</agent:say>
			
			<call state="lookChild"/>
			<exec>tts.speak("Mor renkli kartı gösterin ve sallayın.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>This is purple.</agent:say>
			
			<call state="lookCaretaker"/>
			<exec>tts.speak("Mor kartı çevirip patlıcana işaret edin.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>What is purple? Eggplant is purple. Eggplant is purple.</agent:say>
			
			<call state="lookChild"/>
			<exec>tts.speak("Beyaz kartı gösterin ve sallayın.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>This is white.</agent:say>
			
			<call state="lookCaretaker"/>
			<exec>tts.speak("Beyaz kartı çevirip kara işaret edin.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>What is white? Snow is white. Snow is white.</agent:say>
		</onentry>
	</state>
	
	<state id="EasyLearnBody">
		<onentry>
		<agent:say>Let's learn a song.</agent:say>
			<wait msec="3000"/>
			
			<call state="lookCaretaker"/>
			<exec>tts.speak("Ellerinizi çırpın.", 1.0f, false, false);</exec>
			<agent:say>Clap your hands.</agent:say>
			<call state="lookChild"/>
			<wait msec="3000"/>
			<exec>tts.speak("Bebeğin ellerini çırpın.", 1.0f, false, false);</exec>
			<agent:say>Clap your hands.</agent:say>
			<wait msec="3000"/>

			<call state="lookCaretaker"/>
			<exec>tts.speak("Ellerinizi sallayın.", 1.0f, false, false);</exec>
			<agent:say>Wave hello.</agent:say>
			<call state="lookChild"/>
			<wait msec="3000"/>
			<exec>tts.speak("Bebeğin ellerini sallayın.", 1.0f, false, false);</exec>
			<agent:say>Wave hello.</agent:say>
			<wait msec="3000"/>

			<call state="lookCaretaker"/>
			<exec>tts.speak("Ayağa kalkın.", 1.0f, false, false);</exec>
			<agent:say>Stand up.</agent:say>
			<call state="lookChild"/>
			<wait msec="3000"/>
			<exec>tts.speak("Bebeği ayağa kaldırın.", 1.0f, false, false);</exec>
			<agent:say>Stand up.</agent:say>
			<wait msec="3000"/>

			<call state="lookCaretaker"/>
			<exec>tts.speak("Oturun.", 1.0f, false, false);</exec>
			<agent:say>Sit down.</agent:say>
			<call state="lookChild"/>
			<wait msec="3000"/>
			<exec>tts.speak("Bebeği oturtun.", 1.0f, false, false);</exec>
			<agent:say>Sit down.</agent:say>
			<wait msec="3000"/>

			<call state="lookCaretaker"/>
			<exec>tts.speak("Ellerinizi yürür gibi hareket ettirin.", 1.0f, false, false);</exec>
			<agent:say>Let's go.</agent:say>
			<call state="lookChild"/>
			<wait msec="3000"/>
			<exec>tts.speak("Bebeğin ellerini çırpın.", 1.0f, false, false);</exec>
			<agent:say>Let's go.</agent:say>
			<wait msec="3000"/>

			<agent:say>That was fun! Great job!</agent:say>
		</onentry>
	</state>
	<!-- EASY EASY EASY -->
	
	<!-- MEDIUM MEDIUM MEDIUM -->
	<state id="Learn" extends="Dialog">
		<onentry>
			<agent:say>Let's start learning. What do you want to learn about?</agent:say>
			<agent:listen/>
		</onentry>
		<onevent name="sense.user.speak" cond="event?:sem:color">
			<exec>tts.speak("Renk kartlarının olduğu desteyi alınız.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>Okay, let's learn about colors.</agent:say>
			<goto state="LearnColors"/>
		</onevent>
		<onevent name="sense.user.speak" cond="event?:sem:animal">
			<exec>tts.speak("Hayvan kartlarının olduğu desteyi alınız.", 1.0f, false, false);</exec>
			<agent:say>Okay, let's learn about animals.</agent:say>
			<goto state="LearnAnimals"/>
		</onevent>
		<onevent name="sense.user.speak" cond="event?:sem:body">
			<agent:say>Okay, let's learn about body parts.</agent:say>
			<goto state="LearnBody"/>
		</onevent>
	</state>
	
	
		<!-- STATES ABOUT TEACHING BODY PARTS -->
	<state id="LearnBody">
		<onentry>
			<agent:say>Let's learn about our heads, shoulders, knees and toes.</agent:say>
	
			
			<call state="lookCaretaker"/>
			<call state="lookChild"/>
			<exec>tts.speak("Kafanıza, sonra çoçuğun kafasına yavaşça dokunun.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>This is your head.</agent:say>
			
			<exec>tts.speak("Omuzlariniza, sonra bebegin omuzlarina dokunun.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>These are your shoulders.</agent:say>

			<exec>tts.speak("Dizlerinize, daha sonra bebegin dizlerine dokunun.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>These are your knees.</agent:say>

			<exec>tts.speak("Ayaklariniza, daha sonra bebegin ayaklarina dokunun.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>These are your toes.</agent:say>

			<exec>tts.speak("Gozlerinizi, daha sonra bebegin gozlerini isaret edin.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>These are your eyes.</agent:say>
			<exec>tts.speak("Iki parmaginizi gosterin.", 1.0f, false, false);</exec>
			<wait msec="2000"/>
			<agent:say>We have two eyes. Two eyes.</agent:say>

			<exec>tts.speak("Kulaklariniza, daha sonra bebegin kulaklarina dokunun.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>These are your ears.</agent:say>
			<exec>tts.speak("Iki parmaginizi gosterin.", 1.0f, false, false);</exec>
			<wait msec="2000"/>
			<agent:say>We have two ears. Two ears.</agent:say>

			<exec>tts.speak("Bebege opucuk atin ve agizinizi gosterin.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>This is your mouth.</agent:say>
			<exec>tts.speak("Bir parmaginizi kaldirin.", 1.0f, false, false);</exec>
			<wait msec="2000"/>
			<agent:say>We have one mouth. One mouth.</agent:say>

			<exec>tts.speak("Burnunuza, sonra bebegin burnuna dokunun.", 1.0f, false, false);</exec>
			<wait msec="4000"/>
			<agent:say>This is your nose.</agent:say>
			<exec>tts.speak("Bir parmaginizi kaldirin.", 1.0f, false, false);</exec>
			<wait msec="2000"/>
			<agent:say>We have one nose. One nose.</agent:say>

			<exec>tts.speak("Iki elinizi bebege dogru sallayin.", 1.0f, false, false);</exec>
			<wait msec="4000"/>
			<agent:say>These are our hands.</agent:say>
			<exec>tts.speak("Iki elinizi gosterin.", 1.0f, false, false);</exec>
			<wait msec="2000"/>
			<agent:say>We have two hands. Two hands.</agent:say>

			<exec>tts.speak("Parmaklarinizi bebegin onunde hareket ettirin.", 1.0f, false, false);</exec>
			<wait msec="4000"/>
			<agent:say>These are our fingers.</agent:say>
			<exec>tts.speak("On parmaginizi gosterin.", 1.0f, false, false);</exec>
			<wait msec="2000"/>
			<agent:say>We have ten fingers. Ten fingers.</agent:say>

			<agent:say>That was fun. Now, let's listen to the song again.</agent:say>
			 
		</onentry>
	</state>
	<!-- STATES ABOUT TEACHING BODY PARTS -->
	
	<!-- STATES ABOUT TEACHING ANIMALS -->
	<state id="LearnAnimals">
		<onentry>
			<call state="lookChild"/>
			<exec>tts.speak("Kopek kartini gosterin ve sallayin.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>This is a dog. The dog says woof. </agent:say>
			<call state="lookCaretaker"/>
			<exec>tts.speak("WUF WUF diyin bir kac kez ve sonraki sesle birlikte 4 parmak gosterin.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>The dog has 4 legs.</agent:say>
			
			<call state="lookChild"/>
			<exec>tts.speak("Kedi kartini gosterin ve sallayin.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>This is a cat. The cat says meow. </agent:say>
			<call state="lookCaretaker"/>
			<exec>tts.speak("MIAV MIAV diyin bir kac kez ve sonra elinizle 4 parmak gosterin.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>The cat also has 4 legs like dog.</agent:say>
			
			<call state="lookChild"/>
			<exec>tts.speak("Balik kartini gosterin ve sallayin.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>This is a fish. The fish lives under the sea and swims. </agent:say>
			<call state="lookCaretaker"/>
			<exec>tts.speak("Ellerinizi birlestirip balik gibi saga sola sallayin.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>The fish have fins and a tail.</agent:say>
			
			<call state="lookChild"/>
			<exec>tts.speak("Kus kartini gosterin.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>This is a bird. The bird flies in the sky.</agent:say>
			<call state="lookCaretaker"/>
			<exec>tts.speak("Ucan kus gibi kollarinizi cirpin ve FILAY diyin bir kac kez.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>The bird lays eggs in its nest.</agent:say>
			
			<call state="lookChild"/>
			<exec>tts.speak("Ordek kartini gosterin ve sallayin.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>This is a duck. The duck says quack.</agent:say>
			<call state="lookCaretaker"/>
			<exec>tts.speak("VAK VAK diyin bir kac", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>The duck can swim.</agent:say>
			
			<call state="lookChild"/>	
			<exec>tts.speak("Kurbaga kartini gosterin ve sallayin.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>This is a frog. The frog has a very long tongue.</agent:say>
			<call state="lookCaretaker"/>
			<exec>tts.speak("Dilinizi cikartin kisa bir sure.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>The frog lives in both water and land.</agent:say>

			<call state="lookChild"/>	
			<exec>tts.speak("At kartini gosterin ve sallayin.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>This is a horse. The horse can run very fast.</agent:say>

			<exec>tts.speak("Ayi kartini gosterin ve sallayin.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>This is a bear. The bear is very big.</agent:say>
			<call state="lookCaretaker"/>
			<exec>tts.speak("Ellerinizi pence yapip, havaya kaldirin ve BIG BEIR diyin.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			
			<call state="lookChild"/>
			<agent:say>Now you know your animals.</agent:say>
			<goto state="CheckAgain"/>
		</onentry>
	</state>
	<!-- STATES ABOUT TEACHING ANIMALS -->
	
	<!-- STATES ABOUT TEACHING COLORS -->
	<state id="LearnColors">
		<onentry>
			<call state="lookChild"/>
			<exec>tts.speak("Kirmizi renkli karti gosterin ve sallayin.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>This is red.</agent:say>
			
			<call state="lookCaretaker"/>
			<exec>tts.speak("Kirmizi karti cevirip sirayla itfaiye araci, trafik levhasi ve elma resimlerine isaret edin.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>The firetruck, the stop sign and the apple are all red. Red</agent:say>
			
			<call state="lookChild"/>
			<exec>tts.speak("Mavi renkli karti gosterin ve sallayin.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>This is blue. </agent:say>
			
			<call state="lookCaretaker"/>
			<exec>tts.speak("Mavi karti cevirip sirayla deniz, gokyuzu ve kelebek resimlerine isaret edin.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>The sea, the sky and the butterfly are all blue. Blue</agent:say>
			
			<call state="lookChild"/>
			<exec>tts.speak("Yesil renkli karti gosterin ve sallayin.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>This is green.</agent:say>
			
			<call state="lookCaretaker"/>
			<exec>tts.speak("Yesil karti cevirip sirayla cimen, agac ve armut resimlerine isaret edin.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>The grass, the tree and the pear are all green. Green</agent:say>
			
			<call state="lookChild"/>
			<exec>tts.speak("Sari renkli karti gosterin ve sallayin.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>This is yellow.</agent:say>
			
			<call state="lookCaretaker"/>
			<exec>tts.speak("Sari karti cevirip sirayla limon, ordek ve muz resimlerine isaret edin.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>The lemon, the duck and the banana are all yellow. Yellow</agent:say>
			
			<call state="lookChild"/>
			<exec>tts.speak("Turuncu renkli karti gosterin ve sallayin.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>This is orange.</agent:say>
			
			<call state="lookCaretaker"/>
			<exec>tts.speak("Turunucu karti cevirip sirayla portakal, havuc ve top resimlerine isaret edin.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>The orange, the carrot and the basketball are all orange. Orange</agent:say>
		
			<call state="lookChild"/>
			<exec>tts.speak("Mor renkli karti gosterin ve sallayin.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>This is purple.</agent:say>
			
			<call state="lookCaretaker"/>
			<exec>tts.speak("Mor karti cevirip sirayla uzum, patlican ve bot resimlerine isaret edin.", 1.0f, false, false);</exec>
			<wait msec="3000"/>
			<agent:say>The grapes, the eggplant and the boots are all purple. Purple</agent:say>
			
			<wait msec="2000"/>
			<agent:say>Now you know your colors.</agent:say>
			<goto state="CheckAgain"/>
		</onentry>
	</state>
	<!-- STATES ABOUT TEACHING COLORS -->
	
	<!-- MEDIUM MEDIUM MEDIUM -->
	
	
	<!-- HARD HARD HARD -->
	<state id="Play" extends="Dialog">
		<onentry>
			<call state="lookChild"/>
			<exec>audioplayer.playSound("audio/PlaySubject.wav");</exec>
			<agent:say>Let's have some fun. Which subject would you like to play with?</agent:say>
			<agent:listen/>
		</onentry>
		
		<onevent name="sense.user.speak" cond="event?:sem:animal">
			<goto state="PlayAnimals"/>
		</onevent>
		<onevent name="sense.user.speak" cond="event?:sem:color">
			<goto state="PlayColors"/>
		</onevent>
		<onevent name="sense.user.speak" cond="event?:sem:object">
			<goto state="PlayObjects"/>
		</onevent>
	</state>
	
	<state id="PlayColors">
		<onentry>
			<agent:say>Let's see if you have learned your colors.</agent:say>
			<wait msec="3000"/>
			<call state="lookCaretaker"/>
			<call state="PlayPrepare"/>
			
			<agent:say>Let's start the game.</agent:say>
			<exec>tts.speak("Oyuna başlıyoruz.", 1.0f, false, false);</exec>
			
			<call state="lookChild"/>
			<agent:say>Can you show me the color red?</agent:say>
			<exec>tts.speak("Cocuğa kırmızı rengini göstermesini istedim.", 1.0f, false, false);</exec>
			<call state="lookBoard"/>
			<wait msec="4000"/>
			<call state="Showing"/>
		
			<call state="lookChild"/>
			<agent:say>Can you show me the color purple?</agent:say>
			<exec>tts.speak("Cocuğa mor rengini göstermesini istedim.", 1.0f, false, false);</exec>
			<call state="lookBoard"/>
			<wait msec="4000"/>
			<call state="Showing"/>
			
			<call state="lookChild"/>
			<agent:say>Can you first show me the color orange then yellow?</agent:say>
			<exec>tts.speak("Cocuğa önce turuncu sonra sari rengini göstermesini istedim.", 1.0f, false, false);</exec>
			<call state="lookBoard"/>
			<wait msec="4000"/>
			<call state="Showing"/>
			
			<call state="lookChild"/>
			<agent:say>Can you show me the color of grass?</agent:say>
			<exec>tts.speak("Cocuğa yeşil rengini göstermesini istedim.", 1.0f, false, false);</exec>
			<call state="lookBoard"/>
			<wait msec="4000"/>
			<call state="Showing"/>
			
			<call state="lookChild"/>
			<agent:say>Can you show me the color of firetruck?</agent:say>
			<exec>tts.speak("Cocuğa kırmızı rengini göstermesini istedim.", 1.0f, false, false);</exec>
			<call state="lookBoard"/>
			<wait msec="4000"/>
			<call state="Showing"/>
			
			<goto state="CheckAgain"/>		
		</onentry>
	</state>
	
	
	<state id="PlayAnimals">
		<onentry>
			<agent:say>Great choice. I love animals. </agent:say>
			<wait msec="3000"/>
			<call state="lookCaretaker"/>
			<call state="PlayPrepare"/>
			
			<exec>audioplayer.playSound("audio/PlayAnimalStart.wav");</exec>
			<agent:say>Let's start the game.</agent:say>
			
			<call state="lookChild"/>
			<exec>audioplayer.playSound("audio/PlayAnimalDog.wav");</exec>
			<agent:say>Can you show me the dog on the board?</agent:say>
			<call state="lookBoard"/>
			<wait msec="4000"/>
			<call state="Showing"/>
		
			<call state="lookChild"/>
			<exec>audioplayer.playSound("audio/PlayAnimalFish.wav");</exec>
			<agent:say>Can you show me the fish on the board?</agent:say>
			<call state="lookBoard"/>
			<wait msec="4000"/>
			<call state="Showing"/>
			
			<call state="lookChild"/>
			<exec>audioplayer.playSound("audio/PlayAnimalBird.wav");</exec>
			<agent:say>Can you show me the animal that flies on the board?</agent:say>
			<call state="lookBoard"/>
			<wait msec="4000"/>
			<call state="Showing"/>
			
			<call state="lookChild"/>
			<exec>audioplayer.playSound("audio/PlayAnimalCatDog.wav");</exec>
			<agent:say>Can you show me the animals that have four legs?</agent:say>
			<call state="lookBoard"/>
			<wait msec="4000"/>
			<call state="Showing"/>
			
			<call state="lookChild"/>
			<exec>audioplayer.playSound("audio/PlayAnimalCat.wav");</exec>
			<agent:say>Can you show me the animal that says meow?</agent:say>
			<call state="lookBoard"/>
			<wait msec="4000"/>
			<call state="Showing"/>
			
			<goto state="CheckAgain"/>			
			
		</onentry>
	
		
		
	</state>
	
	<state id="PlayPrepare" extends="Dialog">
		<onentry>
			<exec>audioplayer.playSound("audio/PlayPrepareDistribute.wav");</exec>
			<agent:say>Would you please distribute the cards to the board?</agent:say>
			<wait msec="2000"/>
			<agent:listen/>
		</onentry>
		<onevent name="sense.user.speak" cond="event?:sem:okay">
			<return/>
		</onevent>
	</state>
	
	<state id="Showing" extends="Dialog">
		<onentry>
			<call state="lookCaretaker"/>
			<exec>audioplayer.playSound("audio/ShowingCheck.wav");</exec>
			<wait msec="1000"/>
			<agent:say>Is that correct?</agent:say>
			<wait msec="3000"/>
			<agent:listen/>
		</onentry>
		<onevent name="sense.user.speak" cond="event?:sem:yes">
			<call state="lookChild"/>
			<agent:say>Good Job. You are doing great.</agent:say>
			<wait msec="3000"/>
			<return/>
		</onevent>
		
		<onevent name="sense.user.speak" cond="event?:sem:no">
			<call state="lookChild"/>
			<exec>audioplayer.playSound("audio/ShowingCorrect.wav");</exec>
			<agent:say>It's alright. Let's see which one is the correct answer.</agent:say>
			<call state="lookCaretaker"/>
			<agent:say>Can you show me the correct answer please?</agent:say>
			<wait msec="4000"/>
			<agent:say>Let's continue.</agent:say>
			<return/>
		</onevent>
	</state>
	
	<state id="PlayObjects" extends="Dialog">
		<onentry>
			<agent:say>Great choice. This is going to be fun! </agent:say>
			<wait msec="1000"/>
			<call state="lookCaretaker"/>
			<agent:say>Let's start the game.</agent:say>
			
			<exec>audioplayer.playSound("audio/PlayObjectsHat.wav");</exec>
			<call state="FindObject" p:object="'hat'"/>
			<exec>audioplayer.playSound("audio/PlayObjectsChair.wav");</exec>
			<call state="FindObject" p:object="'chair'"/>
			<exec>audioplayer.playSound("audio/PlayObjectsTomato.wav");</exec>
			<call state="FindObject" p:object="'tomato'"/>
			<exec>audioplayer.playSound("audio/PlayObjectsCar.wav");</exec>
			<call state="FindObject" p:object="'car'"/>
			<exec>audioplayer.playSound("audio/PlayObjectsButterfly.wav");</exec>
			<call state="FindObject" p:object="'butterfly'"/>
			
			<goto state="CheckAgain"/>			
			
		</onentry>
	</state>
	
	<state id="FindObject" extends="Dialog">
		<param name="object" type="String" default="''"/>
		<onentry>
			<call state="lookChild"/>
			<wait msec="1000"/>
			<agent:say>Look around you and try to find a <expr>object</expr>.</agent:say>
			<call state="lookUp"/>
			<wait msec="1000"/>
			<exec>audioplayer.playSound("audio/FindObjectExplain.wav");</exec>
			<call state="lookCaretaker"/>
			<wait msec="1500"/>
			<call state="lookChild"/>
			<wait msec="1500"/>
			
			<agent:say>Could you find it?</agent:say>
			<agent:listen/>
		</onentry>
		
		<onevent name="sense.user.speak" cond="event?:sem:yes">
			<call state="lookChild"/>
			<agent:say>Great job! You found it.</agent:say>
			<wait msec="1000"/>		
			<return/>
		</onevent>
		
		<onevent name="sense.user.speak" cond="event?:sem:no">
			<call state="lookChild"/>
			<agent:say>Where could it be?</agent:say>
			<wait msec="2000"/>
			<call state="lookCaretaker"/>
			<exec>audioplayer.playSound("audio/FindObjectCaretakerQuestion.wav");</exec>
			<agent:say>Hmmm... Do you see the <expr> object </expr></agent:say>
			<wait msec="2000"/>
			<call state="ShowObject" p:object="object"/>
			<return/>
		</onevent>
	</state>
	
	<state id="ShowObject" extends="Dialog">
		<param name="object" type="String" default="''"/>
		<onentry>
			<agent:listen/>
		</onentry>
		<onevent name="sense.user.speak" cond="event?:sem:yes">
			<call state="lookChild"/>
			<agent:say>Ahhh... There it is. That's a <expr> object </expr></agent:say>
			<wait msec="1000"/>
			<return/>
		</onevent>
		
		<onevent name="sense.user.speak" cond="event?:sem:no">
			<call state="lookChild"/>
			<agent:say>I can't see a <expr> object </expr></agent:say>
			<agent:say>Let's find something else.</agent:say>
			<wait msec="2000"/>
			<return/>
		</onevent>
	</state>
	
	
	
	<!-- CHECK TO CONTINUE OR EXIT -->
	<state id="CheckAgain" extends="Dialog">
		<onentry>
			<agent:say>Do you want to continue?</agent:say>
			<agent:listen/>
		</onentry>
		<onevent name="sense.user.speak" cond="event?:sem:yes">
			<agent:say>Okay, let's play again.</agent:say>
			<goto state="Start"/>
		</onevent>
		<onevent name="sense.user.speak" cond="event?:sem:no">
			<agent:say>Okay, goodbye</agent:say>
			<exec>System.exit(0)</exec>
		</onevent>		
	</state>
	
	<state id="Dialog">
		<onevent name="sense.user.silence">
			<agent:say>I am sorry, I didn't hear anything.</agent:say>
			<reentry/>
		</onevent>
		<onevent name="sense.user.speak">
			<agent:say>I am sorry, I didn't get that.</agent:say>
			<reentry/>
		</onevent>
	</state>
	
	<!-- CONTROLLING FURHAT GAZE -->
	<state id="lookAround">
		<param name="degx" type="float" default="0.0" />
		<param name="degy" type="float" default="0.0" />
		<param name="degz" type="float" default="0.0" />
		<onentry>
			<send event="action.gaze" p:location="new Location(degx, degy, degz)" />
			<return />
		</onentry>
	</state>

	<state id="lookCaretaker">
		<onentry>
			<send event="action.gaze" p:location="new Location(-1, 0, 1)" />
			<return />
		</onentry>
	</state>
	
	<state id="lookChild">
		<onentry>
			<send event="action.gaze" p:location="new Location(1, 0, 1)" />
			<return />
		</onentry>
	</state>
	
	<state id="lookBoard">
		<onentry>
			<send event="action.gaze" p:location="new Location(0, -1, 1)" />
			<return />
		</onentry>
	</state>
	
	<state id="lookUp">
		<onentry>
			<send event="action.gaze" p:location="new Location(0, 1, 1)" />
			<return />
		</onentry>
	</state>
	
	<!-- CONTROLLING FURHAT GAZE -->	
	
</flow>